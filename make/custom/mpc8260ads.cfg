#
#  Config file for MPC8260 based Motorola ADS board
#
#  $Id$
#

include $(RTEMS_ROOT)/make/custom/default.cfg

RTEMS_CPU=powerpc
RTEMS_CPU_MODEL=mpc8260
8XX_CPU_TYPE=8260

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=mpc8260ads

#  PPC_ABI (PowerPC)
#     This defines the calling convention (Application Binary Interface)
#     used in this configuration.  EABI is the only one supported.
#     This BSP was initially developed using the PowerOpen ABI.
#
#  PPC_ASM (PowerPC)
#     This defines the assembly language format used in this configuration.
#     ELF is the only one supported.

#  This contains the compiler options necessary to select the CPU model
#  and (hopefully) optimize for it. 
#
# CPU_CFLAGS = -mcpu=$(8XX_CPU_TYPE) -mstrict-align
CPU_CFLAGS = -mcpu=603e -mstrict-align -Dmpc8260 \
  -DPPC_ABI=PPC_ABI_EABI -DPPC_ASM=PPC_ASM_ELF

#  List of warnings to enable
#
#
RTEMS_WARNINGS_COMMON_ANY= -Wno-unused-parameter \
  -Wformat=2 -Wfloat-equal -Wundef \
  -Wuninitialized -Wpointer-arith -Wcast-qual \
  -Wcast-align -Wwrite-strings  -Waggregate-return \
  -Wmissing-declarations  -Wmissing-noreturn \
  -Wmissing-format-attribute -Wpacked -Wredundant-decls \
  -Wshadow -Wsign-compare

RTEMS_WARNINGS_IMPLICIT_FUNCTION_DECLARATION=-Wimplicit-function-declaration

RTEMS_WARNINGS_COMMON_C= \
  -Wbad-function-cast -Wstrict-prototypes \
  -Wmissing-prototypes -Wnested-externs \
  $(RTEMS_WARNINGS_IMPLICIT_FUNCTION_DECLARATION) \
  -Wimplicit-int

RTEMS_LOCAL_WARNINGS= $(RTEMS_WARNINGS_COMMON_ANY) $(RTEMS_WARNINGS_COMMON_C)

# optimize flag: typically -0, could use -O4 or -fast
# -O4 is ok for RTEMS
# NOTE: some level of -O may be actually required by inline assembler
CFLAGS_OPTIMIZE_V=-O2 -fno-keep-inline-functions -fno-strict-aliasing -g -Wall -W $(RTEMS_LOCAL_WARNINGS)

# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

define make-exe
	$(LINK.c) $(AM_CFLAGS) $(AM_LDFLAGS) -o $(basename $@).exe \
	    $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -g -n $@ > $(basename $@).num
	$(SIZE) $@
endef

# Miscellaneous additions go here
